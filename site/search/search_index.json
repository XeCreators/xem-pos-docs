{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Framework This is just another WordPress framework + build process. It is built for developers to create awesome and highly customizable themes for clients or sell it on any marketplace. Features Auto browser reload. Auto/manual concatenate or minify CSS and JavaScript files. Auto/manual image optimization . Remove unused CSS using PurgeCSS. Theme Options (Customizer). Highly Customizable and Easy to Customize. Bootstrap 4 and Fontawesome 5 Icons. Wide, Fluid and Boxed Layout. Right, Left or Both Sides Sidebar Supported. WooCommerce Ready. Unlimited Widget Areas. One Click Demo Import. Forever Free. Professional and Outstanding Support. Requirements Latest version of WordPress Latest versions of Nodejs and Gulp Memory Limit : 64M Max Upload Size : 64M","title":"Introduction"},{"location":"#about-framework","text":"This is just another WordPress framework + build process. It is built for developers to create awesome and highly customizable themes for clients or sell it on any marketplace.","title":"About Framework"},{"location":"#features","text":"Auto browser reload. Auto/manual concatenate or minify CSS and JavaScript files. Auto/manual image optimization . Remove unused CSS using PurgeCSS. Theme Options (Customizer). Highly Customizable and Easy to Customize. Bootstrap 4 and Fontawesome 5 Icons. Wide, Fluid and Boxed Layout. Right, Left or Both Sides Sidebar Supported. WooCommerce Ready. Unlimited Widget Areas. One Click Demo Import. Forever Free. Professional and Outstanding Support.","title":"Features"},{"location":"#requirements","text":"Latest version of WordPress Latest versions of Nodejs and Gulp Memory Limit : 64M Max Upload Size : 64M","title":"Requirements"},{"location":"archive/","text":"Coming Soon...","title":"Archive"},{"location":"automation/","text":"Setup Remember to work on css , js and images inside /assets_dev/ folder. Navigate to node_scripts , open config.json to add list of css and js files for concatenation and minification. Files will be concatenated in the order you provide. \"concat_css\": [ \"assets_dev/css/general.css\", \"assets_dev/css/blog.css\", \"assets_dev/css/pages.css\", \"assets_dev/css/widgets.css\", \"assets_dev/css/comments.css\", \"assets_dev/css/woocommerce.css\", \"assets_dev/css/forms.css\" ], \"min_css\": [ \"assets/css/main.css\" ], \"concat_js\": [ \"assets_dev/js/main.js\" ], \"min_js\": [ \"assets/js/main.js\" ], Start Automation Run the following command to watch your theme files for changes and start making an awesome WordPress theme gulp To stop automation use CTRL+C in Windows and CMD+C on Mac. Concatenate CSS Gulp will watch CSS files you have added in \"concat_css\" and will concatenate them on changes in the order you provided in config.json . Concatenate JS Gulp will watch JS files you have added in \"concat_js\" and will concatenate them on changes in the order you provided in config.json . Minify CSS Gulp will watch main.css files you have added in \"min_css\" and will minify it on changes. Minify JS Gulp will watch main.js files you have added in \"min_js\" and will minify it on changes. Image Optimization Gulp will watch Images inside /assets_dev/img/ and will optimize them. Browser Reload Gulp will also watch all your files for changes and will reload the browser automatically.","title":"Automation"},{"location":"automation/#setup","text":"Remember to work on css , js and images inside /assets_dev/ folder. Navigate to node_scripts , open config.json to add list of css and js files for concatenation and minification. Files will be concatenated in the order you provide. \"concat_css\": [ \"assets_dev/css/general.css\", \"assets_dev/css/blog.css\", \"assets_dev/css/pages.css\", \"assets_dev/css/widgets.css\", \"assets_dev/css/comments.css\", \"assets_dev/css/woocommerce.css\", \"assets_dev/css/forms.css\" ], \"min_css\": [ \"assets/css/main.css\" ], \"concat_js\": [ \"assets_dev/js/main.js\" ], \"min_js\": [ \"assets/js/main.js\" ],","title":"Setup"},{"location":"automation/#start-automation","text":"Run the following command to watch your theme files for changes and start making an awesome WordPress theme gulp To stop automation use CTRL+C in Windows and CMD+C on Mac.","title":"Start Automation"},{"location":"automation/#concatenate-css","text":"Gulp will watch CSS files you have added in \"concat_css\" and will concatenate them on changes in the order you provided in config.json .","title":"Concatenate CSS"},{"location":"automation/#concatenate-js","text":"Gulp will watch JS files you have added in \"concat_js\" and will concatenate them on changes in the order you provided in config.json .","title":"Concatenate JS"},{"location":"automation/#minify-css","text":"Gulp will watch main.css files you have added in \"min_css\" and will minify it on changes.","title":"Minify CSS"},{"location":"automation/#minify-js","text":"Gulp will watch main.js files you have added in \"min_js\" and will minify it on changes.","title":"Minify JS"},{"location":"automation/#image-optimization","text":"Gulp will watch Images inside /assets_dev/img/ and will optimize them.","title":"Image Optimization"},{"location":"automation/#browser-reload","text":"Gulp will also watch all your files for changes and will reload the browser automatically.","title":"Browser Reload"},{"location":"class_to/","text":"Coming Soon...","title":"Class Theme Options"},{"location":"content_none/","text":"Coming Soon...","title":"Content None"},{"location":"content_page/","text":"Coming Soon...","title":"Content Page"},{"location":"customizer/","text":"Coming Soon...","title":"Customizer"},{"location":"defaults/","text":"Coming Soon...","title":"Class Defaults"},{"location":"demo_content/","text":"Coming Soon...","title":"Class Demo Content"},{"location":"extras/","text":"Coming Soon...","title":"Extra Fucntions"},{"location":"footer/","text":"Coming Soon...","title":"Footer"},{"location":"functions/","text":"Coming Soon...","title":"Setup and Enqueue Scripts"},{"location":"header/","text":"Coming Soon...","title":"Header"},{"location":"helpers/","text":"Coming Soon...","title":"Class Helpers"},{"location":"manual/","text":"If you don't feel like using the automation, you can also concatenate , minify and optimize manually. Concatenate CSS Use following command to concatenate your CSS files. gulp concatcss Concatenate JS Use following command to concatenate JS files. gulp concatjs Minify CSS Use following command to minify CSS files. gulp mincss Minify JS Use following command to minify JS files. gulp minjs Image Optimization Use following command to optimize images inside /assets_dev/img/ folder. gulp imagemin Purge CSS Navigate to node_scripts , open config.json to add list of css files to purge. \"purge_css\": [ \"assets/css/main.css\", \"assets/css/main.min.css\" ], You can also add selectors to the \"safelist\" and they will not be removed. Classes generated by WordPress are already added to the list. \"safelist\": [ \"dl\", \"dt\", \"dd\", \"dfn\", \"cite\", \"em\", \"i\", \"blockquote\", \"pre\", \"code\", \"tt\", \"var\", \"abbr\", \"acronym\", \"mark\", \"ins\", \"table\", \"tbody\", \"td\", \"th\", \"embed\", \"iframe\", \"object\", \"aligncenter\", \"logged-in-as\", \"form-submit\" ], Use the following command to remove unused CSS from the files you have mentioned in config.json . gulp purgecss If you think there should be more classes added/removed to the \"safelist\" please open an issue on our github repository. By the way selector list in config.json is not the only \"safelist\" , there is also pattern added in gulpfile.js","title":"Manual Use"},{"location":"manual/#concatenate-css","text":"Use following command to concatenate your CSS files. gulp concatcss","title":"Concatenate CSS"},{"location":"manual/#concatenate-js","text":"Use following command to concatenate JS files. gulp concatjs","title":"Concatenate JS"},{"location":"manual/#minify-css","text":"Use following command to minify CSS files. gulp mincss","title":"Minify CSS"},{"location":"manual/#minify-js","text":"Use following command to minify JS files. gulp minjs","title":"Minify JS"},{"location":"manual/#image-optimization","text":"Use following command to optimize images inside /assets_dev/img/ folder. gulp imagemin","title":"Image Optimization"},{"location":"manual/#purge-css","text":"Navigate to node_scripts , open config.json to add list of css files to purge. \"purge_css\": [ \"assets/css/main.css\", \"assets/css/main.min.css\" ], You can also add selectors to the \"safelist\" and they will not be removed. Classes generated by WordPress are already added to the list. \"safelist\": [ \"dl\", \"dt\", \"dd\", \"dfn\", \"cite\", \"em\", \"i\", \"blockquote\", \"pre\", \"code\", \"tt\", \"var\", \"abbr\", \"acronym\", \"mark\", \"ins\", \"table\", \"tbody\", \"td\", \"th\", \"embed\", \"iframe\", \"object\", \"aligncenter\", \"logged-in-as\", \"form-submit\" ], Use the following command to remove unused CSS from the files you have mentioned in config.json . gulp purgecss If you think there should be more classes added/removed to the \"safelist\" please open an issue on our github repository. By the way selector list in config.json is not the only \"safelist\" , there is also pattern added in gulpfile.js","title":"Purge CSS"},{"location":"page_options/","text":"Coming Soon...","title":"Page Options"},{"location":"plugins/","text":"Coming Soon...","title":"Plugins Activator"},{"location":"scripts/","text":"Coming Soon...","title":"Class Dynamic Scripts"},{"location":"selectors/","text":"Coming Soon...","title":"Class Selectors"},{"location":"single/","text":"Coming Soon...","title":"Single"},{"location":"start/","text":"Get Framework Download fresh copy of XeFramework and extract it to you development environment. Change folder name to your theme name. e.g: xurais or xu-rais . Install Nodejs Nodejs is a JavaScript runtime built on Chrome's V8 JavaScript engine . Install the latest version from their website if you don't have it installed already. You can check Nodejs version using the following command. node -v You can check npm version using the following command. npm -v Install Gulp We use Gulp to automate and enhance our theme development. Install gulp globally using following command. npm install gulp -g Initialization Navigate to node_scripts folder. Open config.json with your favorite editor. Change name to your theme name. eg: Xurais or Xu Rais (Capitalized). \"name\": \"Xurais\", Change the proxy to your local WordPress site url. eg: localhost/xurais/ (Without http://). \"proxy\": \"localhost/xurais/\", Open command line, navigate to project folder and run this command to install dependencies: npm install Now run following command to automatically change text-domain , prefixes and DocBlocks to your theme name. gulp init Build Open config.json inside node_scripts folder and change build path to your desired location. \"build\": \"E:/Projects/Xe Framework\", Once you have completed your theme, run the below command to generate a clean copy. .pot file will also be generated inside languages folder. gulp build","title":"Let's Start"},{"location":"start/#get-framework","text":"Download fresh copy of XeFramework and extract it to you development environment. Change folder name to your theme name. e.g: xurais or xu-rais .","title":"Get Framework"},{"location":"start/#install-nodejs","text":"Nodejs is a JavaScript runtime built on Chrome's V8 JavaScript engine . Install the latest version from their website if you don't have it installed already. You can check Nodejs version using the following command. node -v You can check npm version using the following command. npm -v","title":"Install Nodejs"},{"location":"start/#install-gulp","text":"We use Gulp to automate and enhance our theme development. Install gulp globally using following command. npm install gulp -g","title":"Install Gulp"},{"location":"start/#initialization","text":"Navigate to node_scripts folder. Open config.json with your favorite editor. Change name to your theme name. eg: Xurais or Xu Rais (Capitalized). \"name\": \"Xurais\", Change the proxy to your local WordPress site url. eg: localhost/xurais/ (Without http://). \"proxy\": \"localhost/xurais/\", Open command line, navigate to project folder and run this command to install dependencies: npm install Now run following command to automatically change text-domain , prefixes and DocBlocks to your theme name. gulp init","title":"Initialization"},{"location":"start/#build","text":"Open config.json inside node_scripts folder and change build path to your desired location. \"build\": \"E:/Projects/Xe Framework\", Once you have completed your theme, run the below command to generate a clean copy. .pot file will also be generated inside languages folder. gulp build","title":"Build"},{"location":"styles/","text":"Coming Soon...","title":"Class Dynamic Styles"},{"location":"support/","text":"If you have any difficulties, questions or bugs to report feel free to open an issue on Github Repository . Working Hours (GMT +5) Winter: 9:00am \u2013 5:00pm Summer: 8:00am \u2013 6:00pm","title":"Support"},{"location":"support/#working-hours-gmt-5","text":"Winter: 9:00am \u2013 5:00pm Summer: 8:00am \u2013 6:00pm","title":"Working Hours (GMT +5)"},{"location":"template_tags/","text":"Coming Soon...","title":"Template Tags"},{"location":"theme_options/","text":"For theme options we use Kirki Customizer Framework which is a complete toolkit for WordPress theme developers. Please check out their documentation on how to add panels, sections and controls. Options Folder Customizer options are auto-loaded from /models/theme-options/ folder, you don't need to include them. You can delete existing options if not needed or add more as per Kirki Customizer Framework documentation. Priority If you open theme-options.php file inside /models/ folder you will notice that there is an array to define priority for customizer panels/sections. Priority can be easily added for new panels/sections. De::$priority = array( // ... ); $priority is a static property of Class Defaults which lives inside Helpers namespace.","title":"Theme Options"},{"location":"theme_options/#options-folder","text":"Customizer options are auto-loaded from /models/theme-options/ folder, you don't need to include them. You can delete existing options if not needed or add more as per Kirki Customizer Framework documentation.","title":"Options Folder"},{"location":"theme_options/#priority","text":"If you open theme-options.php file inside /models/ folder you will notice that there is an array to define priority for customizer panels/sections. Priority can be easily added for new panels/sections. De::$priority = array( // ... ); $priority is a static property of Class Defaults which lives inside Helpers namespace.","title":"Priority"},{"location":"views/","text":"Coming Soon...","title":"Introduction"},{"location":"widgets/","text":"Coming Soon...","title":"Widgets"}]}